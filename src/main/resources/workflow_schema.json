{
  "$schema": "http://json-schema.org/draft/2020-12/schema#",
  "title": "Workflow",
  "type": "object",
  "properties": {
    "commands": {
      "type": "array",
      "minItems": 1,
      "maxItems": 100,
      "items": { "$ref": "#/$defs/command" }
    },
    "finallyCommands": {
      "type": "array",
      "minItems": 0,
      "maxItems": 10,
      "items": { "$ref": "#/$defs/command" }
    }
  },
  "$defs": {
    "command": {
      "type": "object",
      "required": [ "name", "@type" ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the command."
        },
        "@type": {
          "enum": ["database", "groovy", "httpRequest", "java", "nothing", "print", "sleep", "sshExec", "sshShell", "waitUntilSubPasses"]
        },
        "ifs": {
          "type": "array",
          "items": { "$ref": "#/$defs/expression" }
        },
        "inputs": {
          "type": "array",
          "items": { "$ref": "#/$defs/expression" }
        },
        "asserts": {
          "type": "array",
          "items": { "$ref": "#/$defs/expression" }
        },
        "outputs": {
          "type": "array",
          "items": { "$ref": "#/$defs/expression" }
        }
      },
      "if": {
        "properties": {
          "@type": { "const": "waitUntilSubPasses" }
        }
      },
      "then": {
        "properties": {
          "subcommands": {
            "type": "array",
            "items": { "$ref": "#/$defs/command" }
          }
        },
        "required": ["subcommands"]
      },
      "additionalProperties": false,
      "patternProperties": {
        "^_comment.*": {}
      }
    },
    "expression": {
      "type": "object",
      "required": [ "name", "value" ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the expression."
        },
        "value": {
          "type": ["any"],
          "description": "The value of the expression."
        },
        "@type": {
          "enum": ["groovy", "java", "plain", "spel"]
        }
      },
      "additionalProperties": false,
      "patternProperties": {
        "^_comment.*": {}
      }
    }
  },
  "additionalProperties": false,
  "patternProperties": {
    "^_comment.*": {}
  }
}